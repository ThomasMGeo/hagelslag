#!/usr/bin/env python
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.linear_model import LogisticRegressionCV
from sklearn.pipeline import Pipeline
from sklearn.feature_selection import SelectKBest, f_classif
from datetime import datetime


num_procs = 3
model_names = ["Random Forest", "Gradient Boosting", "Logistic Regression"]
model_objs = [RandomForestClassifier(n_estimators=100,
                                     min_samples_split=15,
                                     max_features="sqrt",
                                     class_weight="auto",
                                     n_jobs=num_procs),
              GradientBoostingClassifier(n_estimators=100,
                                         learning_rate=0.05,
                                         max_features="sqrt",
                                         min_samples_split=15),
              Pipeline([("features", SelectKBest(f_classif, 10)),
                       ("lr", LogisticRegressionCV(Cs=5, cv=5,
                                                   n_jobs=num_procs,
                                                   class_weight="auto",
                                                   multi_class='multinomial'))])
              ]
variables = ["UP_HELI_MAX", "GRPL_MAX", "W_UP_MAX", "W_DN_MAX", "WSPD10MAX", "UP_HELI_MIN"]
var_stats = ["mean", "max", "min", "std", "mean_dt", "max_dt"]
input_columns = ["Forecast_Hour", "Valid_Hour_UTC", "Duration_Step", "Duration_Total", "Centroid_Lon", "Centroid_Lat"]
for var in variables:
    for stat in var_stats:
        input_columns.append(var + "_" + stat)
scratch_path = "/glade/scratch/dgagne/"
ensemble_members = ["mem{0:d}".format(m) for m in range(1, 11)]
config = dict(ensemble_name="NCAR",
              ensemble_members=ensemble_members,
              num_procs=num_procs,
              start_dates={"train": datetime(2015, 5, 1), "forecast": datetime(2015, 6, 4)},
              end_dates={"train": datetime(2015, 5, 31), "forecast": datetime(2015, 6, 10)},
              start_hour=12,
              end_hour=36,
              map_filename="/glade/u/home/dgagne/hagelslag/mapfiles/ncar_ensemble_map_2015.txt",
              train_data_path=scratch_path + "track_data_ncar_2013_csv/",
              forecast_data_path=scratch_path + "track_data_ncar_2015_csv/",
              member_files={"train": scratch_path + "member_info_ncar_2013.csv",
                            "forecast": scratch_path + "member_info_ncar_2015.csv"},
              data_format="csv",
              group_col="Microphysics",
              condition_model_names=model_names,
              condition_model_objs=model_objs,
              condition_input_columns=input_columns,
              condition_output_column="Hail_Size",
              output_threshold=5,
              size_model_names=model_names,
              size_model_objs=model_objs,
              size_input_columns=input_columns,
              size_output_column="Hail_Size",
              size_range_params=(10, 100, 5),
              track_model_names=model_names,
              track_model_objs=model_objs,
              track_input_columns=input_columns,
              track_output_columns={"translation-x": "Translation_Error_X",
                                    "translation-y": "Translation_Error_Y",
                                    "start-time": "Start_Time_Error"},
              track_output_ranges={"translation-x": (-240000, 240000, 24000),
                                   "translation-y": (-240000, 240000, 24000),
                                   "start-time": (-6, 6, 1),
                                   },
              load_models=True,
              model_path=scratch_path + "track_models_ncar_2015/",
              metadata_columns=["Track_ID", "Step_ID"],
              data_json_path=scratch_path + "track_data_ncar_2015_json/",
              forecast_json_path=scratch_path + "track_forecasts_ncar_2015_json/",
              copula_file=scratch_path + "track_copulas_ncar_2015.pkl",
              num_track_samples=1000,
              sampler_thresholds=[25, 50],
              sampler_out_path=scratch_path + "track_samples_ncar_2015/",
              ensemble_variables=["HAIL_MAX2D"],
              ensemble_variable_thresholds={"UP_HELI_MAX": [75],
                                            "GRPL_MAX": [25],
                                            "HAIL_MAX2D": [25, 50]},
              ml_grid_method="mean",
              neighbor_radius=[14],
              neighbor_sigma=[5, 40],
              grid_shape=(985, 1580),
              ensemble_consensus_path=scratch_path + "ensemble_consensus_ncar_2015/",
              ensemble_data_path="/glade/scratch/sobash/RT2015/",
              single_step=False,
              )
